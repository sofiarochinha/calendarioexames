//// -- LEVEL 1
//// -- Tables and References

// Creating tables
Table users as U {
  id int [pk, increment] // auto-increment
  user_email varchar
  password varchar
  created_at timestamp
}


Table professors {
  id int [pk, increment] 
  name varchar
  email varchar
  availability varchar
  
}

Table courses {
  id int [pk, increment]
  name varchar
  course_id varchar
  course_years int
}

Table classrooms {
  id int [pk, increment]
  classroom varchar
  capacity int
  type varchar
}

Table subject {
  id int [pk, increment]
  name varchar
  subject_id varchar
  semester varchar
  associated_professor varchar
  associated_course varchar
  course_year varchar
  
}

Table academic_year {
  id int [pk, increment]
  year_name varchar
  evaluation_seasons varchar
  
}

Table calendar {
  id int [pk, increment]
  calendar_name varchar
  academic_year varchar
  evaluation_season varchar
  course varchar
  course_year int
  start_date date
  end_date date
}

Table calendar_day {
  id int [pk, increment]
  calendar_id int
  evaluation_day date
}

Table time_slot {
  slot_id int [pk, increment]
  time_slot varchar
}


Table evaluation_slot {
  id int [pk, increment]
  day date
  subject varchar
  associated_professor varchar
  observing_professor varchar
  classroom varchar
  time_slot varchar
  
}

Ref: professors.id  < subject.associated_professor


Ref: courses.name  > subject.associated_course



REF: evaluation_slot.subject < subject.name
REF: evaluation_slot.day > calendar_day.evaluation_day
REF: evaluation_slot.associated_professor > professors.name
REF: evaluation_slot.observing_professor > professors.name
REF: evaluation_slot.classroom > classrooms.classroom
REF: evaluation_slot.time_slot > time_slot.time_slot


REF: courses.name > calendar.course
REF: academic_year.year_name > calendar.academic_year
REF: calendar.id > calendar_day.calendar_id
// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one
//Ref: U.country_code > countries.code  
//Ref: merchants.country_code > countries.code

//Ref: merchant_periods.(merchant_id, country_code) > merchants.(id, country_code)
